@using BE.ModelosIII.Domain
@using BE.ModelosIII.Infrastructure.Helpers
@using BE.ModelosIII.Mvc.Models.Movie
@using MvcContrib.FluentHtml
@inherits ModelWebViewPage<BE.ModelosIII.Tasks.Commands.Movie.MovieCommand>
@using (Html.BeginForm((string)ViewBag.ActionName, "Movie", FormMethod.Post, new { @id = "userForm", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    <fieldset>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Título</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Title, new { @class = "span4", maxlength = "255" })
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Título Original</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.OriginalTitle, new { @class = "span4", maxlength = "255" })
                @Html.ValidationMessageFor(m => m.OriginalTitle, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Director</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Director, new { @class = "span4", maxlength = "255" })
                @Html.ValidationMessageFor(m => m.Director, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Reparto</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.MainCast, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.MainCast, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Género</label>
            <div class="controls">
                  @(this.MultiSelect("GenreIds")
                            .Options(Enum.GetValues(typeof(Genre)).Cast<Genre>(), g => (int)g, g=> g.ToDescription())
                             .FirstOption(string.Empty)
                              .Selected(Model.GenreIds)
                        .Class("span4 populate placeholder"))
                @Html.ValidationMessageFor(m => m.GenreIds, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Clasificación</label>
            <div class="controls">
                @(this.Select("RatingId")
                    .Options(((IList<RatingModel>)ViewBag.Ratings).ToDictionary(x => x.Id, x => x.Name))
                    .FirstOption(string.Empty)
                    .Selected(Model.RatingId)
                    .Class("span4"))
                @Html.ValidationMessageFor(m => m.RatingId, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Trailer</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Trailer, new { @class = "span4 trailerInput", maxlength = "255" })
                @Html.ValidationMessageFor(m => m.Trailer, null, new { @class = "help-inline" })
                <div class="utopia-alert-button">
                    <a id="showPreview" href="javascript:void(0);" class="btn span2">Vista Previa</a>
                    </div>
            </div>
        </div>
        <div class="control-group">
            <label for="datepicker" class="control-label">
                Sinopsis</label>
            <div class="controls">
                @Html.TextAreaFor(m => m.Synopsis, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Synopsis, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Duración</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Runtime, new { @class = "span4", maxlength = "4" })
                @Html.ValidationMessageFor(m => m.Runtime, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Año</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.YearOfRelease, new { @class = "span4", maxlength = "4" })
                @Html.ValidationMessageFor(m => m.YearOfRelease, null, new { @class = "help-inline" })
            </div>
        </div>
        <section class="utopia-widget">
            <div class="utopia-widget-title">
                <span>Posters</span>
            </div>
            <div class="row-fluid">
                <div class="utopia-widget-content">
                    <div class="span12 utopia-form-freeSpace">
                         @if (!string.IsNullOrWhiteSpace(Model.SmallPoster))
                         {
                             <div class="control-group box-last">
                                 <label for="inputError" class="control-label">Pequeño Actual</label>
                                 <div class="controls"><img class="bannerHolder" src="@Model.SmallPoster" alt="" style=""/></div>
                                 <a href="@Model.SmallPoster" class="btn span2 previewPoster">Ver en tamaño original</a>
                             </div>
                             @Html.HiddenFor(m => m.SmallPoster)
                         }
                        <div class="control-group box-last">
                            <label for="inputError" class="control-label">Pequeño Nuevo</label>
                            <div class="controls">
                                @Html.Partial("_FileUpload", Model.NewSmallPoster, new ViewDataDictionary(Html.ViewDataContainer.ViewData)
                           {
                               TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "NewSmallPoster" }
                           })

                            </div>
                            @Html.ValidationMessageFor(m => m.SmallPoster, null, new { @class = "help-inline" })
                        </div>
                         @if (!string.IsNullOrWhiteSpace(Model.Poster))
                         {
                             <div class="control-group box-last">
                                 <label for="inputError" class="control-label">Grande Actual</label>
                                 <div class="controls"><img class="bannerHolder" src="@Model.Poster" alt="" style=""/></div>
                                 <a href="@Model.Poster" class="btn span2 previewPoster">Ver en tamaño original</a>
                             </div>
                             @Html.HiddenFor(m => m.Poster)
                         }
                        <div class="control-group box-last">
                            <label for="inputError" class="control-label">Grande Nuevo</label>
                            <div class="controls">
                                @Html.Partial("_FileUpload", Model.NewPoster, new ViewDataDictionary(Html.ViewDataContainer.ViewData)
                           {
                               TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "NewPoster" }
                           })
                            </div>
                            @Html.ValidationMessageFor(m => m.Poster, null, new { @class = "help-inline" })
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <div class="control-group box-button">
            <div class="utopia-form-button">
                <a href="@Url.Action("Index")" class="btn span2">Cancelar</a>
                <button href="javascript:void(0)" type="submit" class="btn btn-primary span2">
                    Guardar</button>
            </div>
        </div>
        @Html.AntiForgeryToken()
    </fieldset>
}
