@using MvcContrib.FluentHtml
@inherits ModelWebViewPage<BE.ModelosIII.Tasks.Commands.User.UserCommand>
@using (Html.BeginForm((string)ViewBag.ActionName, "User", FormMethod.Post, new { @id = "userForm", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    <fieldset>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Email</label>
            <div class="controls">
                @if (ViewBag.ActionName.ToLowerInvariant() == "edit")
                {
                    @Html.HiddenFor(m => m.Email)
                    <span class="span4">@Model.Email</span>
                }
                else
                {
                    @Html.TextBoxFor(m => m.Email, new { @class = "span4" })
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-inline" })
                }
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Nombre</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Name, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Name, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Apellido</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Surname, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Surname, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                DNI</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Document, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Document, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Teléfono</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Phone, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="datepicker" class="control-label">
                Fecha de Nacimiento</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.BirthDate, new { @class = "span4 datepicker", @Value = !Model.BirthDate.HasValue || Model.BirthDate == DateTime.MinValue ? string.Empty : Model.BirthDate.Value.ToString("dd/MM/yyyy") })
                @Html.ValidationMessageFor(m => m.BirthDate, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Dirección</label>
            <div class="controls">
                @Html.TextBoxFor(m => m.Address, new { @class = "span4" })
                @Html.ValidationMessageFor(m => m.Address, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            <label for="inputError" class="control-label">
                Habilitado</label>
            <div class="controls">
                @Html.CheckBoxFor(m => m.Enabled, new { @class = "span4" })
            </div>
        </div>
          <div class="control-group">
            <label for="inputError" class="control-label">
                Validado</label>
            <div class="controls">
                @Html.CheckBoxFor(m => m.Validated, new { @class = "span4" })
            </div>
        </div>
      
        @if (ViewBag.ActionName.ToLowerInvariant() == "create")
        {
            <div class="control-group">
                <label for="inputError" class="control-label">
                    Contraseña</label>
                <div class="controls">
                    @Html.PasswordFor(m => m.Password, new { @class = "span4" })
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "help-inline" })
                </div>
            </div>
            <div class="control-group">
                <label for="inputError" class="control-label">
                    Confirmar Contraseña</label>
                <div class="controls">
                    @Html.PasswordFor(m => m.VerifyPassword, new { @class = "span4" })
                    @Html.ValidationMessageFor(m => m.VerifyPassword, null, new { @class = "help-inline" })
                </div>
            </div>
        }
        <div class="control-group box-button">
            <div class="utopia-form-button">
                <a href="@Url.Action("Index")" class="btn span2">Cancelar</a>
                <button href="javascript:void(0)" type="submit" class="btn btn-primary span2">
                    Guardar</button>
            </div>
        </div>
        @Html.AntiForgeryToken()
    </fieldset>
}
